{
  "address": "0xa27EC27dFd18f6F48449E6A5997b16672b10dBB3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "val1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "val2",
          "type": "address"
        }
      ],
      "name": "add_connection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "val",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "connected_nodes",
          "type": "address[]"
        }
      ],
      "name": "add_node",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unit_price",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "bidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "qty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "bidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "create_bid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "qty",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bid_id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "service_charge",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "node",
              "type": "address"
            }
          ],
          "internalType": "struct powerx.service_provider[]",
          "name": "service_providers",
          "type": "tuple[]"
        }
      ],
      "name": "execute_transaction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_bid_length",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "get_node_by_address",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_transactions_length",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nodes_adj_list",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "sendViaCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transactions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "service_charge",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "energy_cost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "total_cost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctioned_bid",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "buyer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw_profit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd2a64a3c39910bb2cb55b90967adf5eb509bb3c03ec99eb897f9bc90ff33b037",
  "receipt": {
    "to": null,
    "from": "0x51FD2E5c0A8E86a64806FA56c5F08AF783f2bBC5",
    "contractAddress": "0xa27EC27dFd18f6F48449E6A5997b16672b10dBB3",
    "transactionIndex": 0,
    "gasUsed": "1522407",
    "logsBloom": "0x
    "blockHash": "0xa733fa093bd87dc3122ee3697ff5c29433fc0581f6cac41b0e4dc91a210ccd35",
    "transactionHash": "0xd2a64a3c39910bb2cb55b90967adf5eb509bb3c03ec99eb897f9bc90ff33b037",
    "logs": [],
    "blockNumber": 405777,
    "cumulativeGasUsed": "1522407",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "088e8155afb73388e5e9e3dff4fd70af",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"val1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"val2\",\"type\":\"address\"}],\"name\":\"add_connection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"connected_nodes\",\"type\":\"address[]\"}],\"name\":\"add_node\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unit_price\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"create_bid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bid_id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"service_charge\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"node\",\"type\":\"address\"}],\"internalType\":\"struct powerx.service_provider[]\",\"name\":\"service_providers\",\"type\":\"tuple[]\"}],\"name\":\"execute_transaction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_bid_length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"get_node_by_address\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_transactions_length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nodes_adj_list\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"sendViaCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"service_charge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"energy_cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total_cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctioned_bid\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw_profit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerX.sol\":\"powerx\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerX.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity >=0.7.0 <0.9.0;\\r\\n\\r\\ncontract powerx{\\r\\n    address payable public /* immutable */ i_owner;\\r\\n\\r\\n    constructor() {\\r\\n        i_owner = payable(msg.sender);\\r\\n    }\\r\\n\\r\\n    // schema for bids\\r\\n    struct bid{\\r\\n        uint256 quantity;\\r\\n        uint256 unit_price;\\r\\n        address payable bidder;\\r\\n        uint256 expiry;\\r\\n    }\\r\\n    // schema for transactions\\r\\n    struct transaction{\\r\\n        uint256 service_charge;\\r\\n        uint256 energy_cost;\\r\\n        uint256 total_cost;\\r\\n        uint256 quantity;\\r\\n        uint256 auctioned_bid;\\r\\n        address payable buyer;\\r\\n    }\\r\\n\\r\\n    // schema for service charge\\r\\n    struct service_provider{\\r\\n        uint service_charge;\\r\\n        address payable node;\\r\\n    }\\r\\n\\r\\n    // adjacency list for nodes graph connections\\r\\n    mapping(address => address[]) public nodes_adj_list;\\r\\n    // checker if a node exists in the network \\r\\n    mapping(address => bool) private nodes;\\r\\n    // list of all bids\\r\\n    bid[] public bids;\\r\\n    // list of all executed transactions\\r\\n    transaction[] public transactions;\\r\\n\\r\\n    // function to get length of bids array\\r\\n    function get_bid_length() public view returns (uint256 length) {\\r\\n        return bids.length;\\r\\n    }\\r\\n\\r\\n    // function to get length of transactions array \\r\\n    function get_transactions_length() public view returns (uint256) {\\r\\n        return transactions.length;\\r\\n    }\\r\\n\\r\\n    // function to get the connected nodes to a node \\r\\n    function get_node_by_address(address val) public view returns (address[] memory){\\r\\n        require (nodes[val] == true);\\r\\n        return nodes_adj_list[val];\\r\\n    }\\r\\n\\r\\n    // function to add a node \\r\\n    function add_node(address val, address[] memory connected_nodes) public {\\r\\n        for(uint i=0;i<connected_nodes.length;i++){\\r\\n            require(nodes[connected_nodes[i]] == true);\\r\\n        }\\r\\n        nodes_adj_list[val] = connected_nodes;\\r\\n        nodes[val] = true;\\r\\n        for(uint i=0;i<connected_nodes.length;i++){\\r\\n            nodes_adj_list[connected_nodes[i]].push(val);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // function to add a new connection between two existing nodes\\r\\n    function add_connection(address val1, address val2) public {\\r\\n        require(nodes[val1] == true);\\r\\n        require(nodes[val2] == true);\\r\\n        nodes_adj_list[val1].push(val2);\\r\\n        nodes_adj_list[val2].push(val1);\\r\\n    }\\r\\n\\r\\n    // function to create a bid\\r\\n    function create_bid(uint256 qty, uint256 price, address payable bidder, uint expiry) public {\\r\\n        require(nodes[bidder] == true);\\r\\n        bids.push(bid(qty, price, bidder, expiry));\\r\\n    }\\r\\n\\r\\n    // send eth function\\r\\n    // TODO REMOVE PUBLIC\\r\\n    function sendViaCall(address payable _to, uint256 value) public payable {\\r\\n        // Call returns a boolean value indicating success or failure.\\r\\n        // This is the current recommended method to use.\\r\\n        (bool sent, bytes memory data) = _to.call{value: value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n\\r\\n    // function to execute a transaction\\r\\n    function execute_transaction(uint256 qty, address payable buyer, uint256 bid_id, service_provider[] memory service_providers) public payable {\\r\\n        require(nodes[buyer] == true);\\r\\n        require(bids[bid_id].quantity >= qty);\\r\\n        require(bids[bid_id].expiry >= block.timestamp);\\r\\n        uint256 service = 0;\\r\\n        for(uint256 i=0;i<service_providers.length;i++){\\r\\n            service += service_providers[i].service_charge;\\r\\n        }\\r\\n        uint256 energy_cost = qty * bids[bid_id].unit_price;\\r\\n        require(msg.value >= service + energy_cost);\\r\\n        sendViaCall(bids[bid_id].bidder, energy_cost);\\r\\n        for(uint256 i=0;i<service_providers.length;i++){\\r\\n            sendViaCall(service_providers[i].node, service_providers[i].service_charge);\\r\\n        }\\r\\n        bids[bid_id].quantity -= qty;\\r\\n        transactions.push(transaction(service, energy_cost, service + energy_cost, qty, bid_id, buyer));\\r\\n    }\\r\\n\\r\\n    function withdraw_profit() public payable {\\r\\n        require (msg.sender == i_owner);\\r\\n        sendViaCall(i_owner, address(this).balance);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xc4fda8dbe93f175bb63e18aa32b91e0a9e81f0498d1720c25dfcf5b3b3e69d8f\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c806371b652a21161007f578063d325df0511610059578063d325df0514610254578063dba6335f1461027d578063e4dc4f55146102a8578063e53f9674146102c4576100c2565b806371b652a2146101aa57806372e87a26146101d55780639ace38c214610212576100c2565b806308a31114146100c75780630f4f44f8146100f05780631f26fd121461011957806320734574146101445780632c9f7f92146101605780634423c5f11461016a575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e9919061109d565b610301565b005b3480156100fc57600080fd5b5061011760048036038101906101129190611142565b61042d565b005b34801561012557600080fd5b5061012e61062b565b60405161013b9190611191565b60405180910390f35b61015e6004803603810190610159919061135a565b610638565b005b610168610980565b005b34801561017657600080fd5b50610191600480360381019061018c91906113dd565b610a04565b6040516101a19493929190611419565b60405180910390f35b3480156101b657600080fd5b506101bf610a64565b6040516101cc9190611191565b60405180910390f35b3480156101e157600080fd5b506101fc60048036038101906101f7919061145e565b610a71565b60405161020991906114ad565b60405180910390f35b34801561021e57600080fd5b50610239600480360381019061023491906113dd565b610abf565b60405161024b969594939291906114c8565b60405180910390f35b34801561026057600080fd5b5061027b600480360381019061027691906115ec565b610b2b565b005b34801561028957600080fd5b50610292610d4c565b60405161029f9190611648565b60405180910390f35b6102c260048036038101906102bd9190611663565b610d70565b005b3480156102d057600080fd5b506102eb60048036038101906102e691906116a3565b610e24565b6040516102f8919061178e565b60405180910390f35b60011515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461035e57600080fd5b600360405180608001604052808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030155505050505050565b60011515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461048a57600080fd5b60011515600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104e757600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600480549050905090565b60011515600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461069557600080fd5b83600383815481106106aa576106a96117b0565b5b90600052602060002090600402016000015410156106c757600080fd5b42600383815481106106dc576106db6117b0565b5b90600052602060002090600402016003015410156106f957600080fd5b6000805b825181101561074557828181518110610719576107186117b0565b5b60200260200101516000015182610730919061180e565b9150808061073d90611864565b9150506106fd565b5060006003848154811061075c5761075b6117b0565b5b9060005260206000209060040201600101548661077991906118ad565b90508082610787919061180e565b34101561079357600080fd5b6107e2600385815481106107aa576107a96117b0565b5b906000526020600020906004020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610d70565b60005b835181101561084757610834848281518110610804576108036117b0565b5b602002602001015160200151858381518110610823576108226117b0565b5b602002602001015160000151610d70565b808061083f90611864565b9150506107e5565b50856003858154811061085d5761085c6117b0565b5b9060005260206000209060040201600001600082825461087d9190611907565b9250508190555060046040518060c0016040528084815260200183815260200183856108a9919061180e565b81526020018881526020018681526020018773ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109d857600080fd5b610a0260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1647610d70565b565b60038181548110610a1457600080fd5b90600052602060002090600402016000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905084565b6000600380549050905090565b60016020528160005260406000208181548110610a8d57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60048181548110610acf57600080fd5b90600052602060002090600602016000915090508060000154908060010154908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b60005b8151811015610bc1576001151560026000848481518110610b5257610b516117b0565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610bae57600080fd5b8080610bb990611864565b915050610b2e565b5080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610c15929190610f4e565b506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060005b8151811015610d475760016000838381518110610c9157610c906117b0565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610d3f90611864565b915050610c71565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610d979061196c565b60006040518083038185875af1925050503d8060008114610dd4576040519150601f19603f3d011682016040523d82523d6000602084013e610dd9565b606091505b509150915081610e1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e15906119de565b60405180910390fd5b50505050565b606060011515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610e8357600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610f4257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ef8575b50505050509050919050565b828054828255906000526020600020908101928215610fc7579160200282015b82811115610fc65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610f6e565b5b509050610fd49190610fd8565b5090565b5b80821115610ff1576000816000905550600101610fd9565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61101c81611009565b811461102757600080fd5b50565b60008135905061103981611013565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061106a8261103f565b9050919050565b61107a8161105f565b811461108557600080fd5b50565b60008135905061109781611071565b92915050565b600080600080608085870312156110b7576110b6610fff565b5b60006110c58782880161102a565b94505060206110d68782880161102a565b93505060406110e787828801611088565b92505060606110f88782880161102a565b91505092959194509250565b600061110f8261103f565b9050919050565b61111f81611104565b811461112a57600080fd5b50565b60008135905061113c81611116565b92915050565b6000806040838503121561115957611158610fff565b5b60006111678582860161112d565b92505060206111788582860161112d565b9150509250929050565b61118b81611009565b82525050565b60006020820190506111a66000830184611182565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111fa826111b1565b810181811067ffffffffffffffff82111715611219576112186111c2565b5b80604052505050565b600061122c610ff5565b905061123882826111f1565b919050565b600067ffffffffffffffff821115611258576112576111c2565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000604082840312156112895761128861126e565b5b6112936040611222565b905060006112a38482850161102a565b60008301525060206112b784828501611088565b60208301525092915050565b60006112d66112d18461123d565b611222565b905080838252602082019050604084028301858111156112f9576112f8611269565b5b835b81811015611322578061130e8882611273565b8452602084019350506040810190506112fb565b5050509392505050565b600082601f830112611341576113406111ac565b5b81356113518482602086016112c3565b91505092915050565b6000806000806080858703121561137457611373610fff565b5b60006113828782880161102a565b945050602061139387828801611088565b93505060406113a48782880161102a565b925050606085013567ffffffffffffffff8111156113c5576113c4611004565b5b6113d18782880161132c565b91505092959194509250565b6000602082840312156113f3576113f2610fff565b5b60006114018482850161102a565b91505092915050565b6114138161105f565b82525050565b600060808201905061142e6000830187611182565b61143b6020830186611182565b611448604083018561140a565b6114556060830184611182565b95945050505050565b6000806040838503121561147557611474610fff565b5b60006114838582860161112d565b92505060206114948582860161102a565b9150509250929050565b6114a781611104565b82525050565b60006020820190506114c2600083018461149e565b92915050565b600060c0820190506114dd6000830189611182565b6114ea6020830188611182565b6114f76040830187611182565b6115046060830186611182565b6115116080830185611182565b61151e60a083018461140a565b979650505050505050565b600067ffffffffffffffff821115611544576115436111c2565b5b602082029050602081019050919050565b600061156861156384611529565b611222565b9050808382526020820190506020840283018581111561158b5761158a611269565b5b835b818110156115b457806115a0888261112d565b84526020840193505060208101905061158d565b5050509392505050565b600082601f8301126115d3576115d26111ac565b5b81356115e3848260208601611555565b91505092915050565b6000806040838503121561160357611602610fff565b5b60006116118582860161112d565b925050602083013567ffffffffffffffff81111561163257611631611004565b5b61163e858286016115be565b9150509250929050565b600060208201905061165d600083018461140a565b92915050565b6000806040838503121561167a57611679610fff565b5b600061168885828601611088565b92505060206116998582860161102a565b9150509250929050565b6000602082840312156116b9576116b8610fff565b5b60006116c78482850161112d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61170581611104565b82525050565b600061171783836116fc565b60208301905092915050565b6000602082019050919050565b600061173b826116d0565b61174581856116db565b9350611750836116ec565b8060005b83811015611781578151611768888261170b565b975061177383611723565b925050600181019050611754565b5085935050505092915050565b600060208201905081810360008301526117a88184611730565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061181982611009565b915061182483611009565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611859576118586117df565b5b828201905092915050565b600061186f82611009565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118a2576118a16117df565b5b600182019050919050565b60006118b882611009565b91506118c383611009565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118fc576118fb6117df565b5b828202905092915050565b600061191282611009565b915061191d83611009565b9250828210156119305761192f6117df565b5b828203905092915050565b600081905092915050565b50565b600061195660008361193b565b915061196182611946565b600082019050919050565b600061197782611949565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b60006119c8601483611981565b91506119d382611992565b602082019050919050565b600060208201905081810360008301526119f7816119bb565b905091905056fea264697066735822122063c0f810b75cb3279fdb40beadd61278f8e60d3ae06546c9b556594aa80dc1ff64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/powerX.sol:powerx",
        "label": "i_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 47,
        "contract": "contracts/powerX.sol:powerx",
        "label": "nodes_adj_list",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 51,
        "contract": "contracts/powerX.sol:powerx",
        "label": "nodes",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 55,
        "contract": "contracts/powerX.sol:powerx",
        "label": "bids",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(bid)24_storage)dyn_storage"
      },
      {
        "astId": 59,
        "contract": "contracts/powerX.sol:powerx",
        "label": "transactions",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(transaction)37_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(bid)24_storage)dyn_storage": {
        "base": "t_struct(bid)24_storage",
        "encoding": "dynamic_array",
        "label": "struct powerx.bid[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(transaction)37_storage)dyn_storage": {
        "base": "t_struct(transaction)37_storage",
        "encoding": "dynamic_array",
        "label": "struct powerx.transaction[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_struct(bid)24_storage": {
        "encoding": "inplace",
        "label": "struct powerx.bid",
        "members": [
          {
            "astId": 17,
            "contract": "contracts/powerX.sol:powerx",
            "label": "quantity",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 19,
            "contract": "contracts/powerX.sol:powerx",
            "label": "unit_price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 21,
            "contract": "contracts/powerX.sol:powerx",
            "label": "bidder",
            "offset": 0,
            "slot": "2",
            "type": "t_address_payable"
          },
          {
            "astId": 23,
            "contract": "contracts/powerX.sol:powerx",
            "label": "expiry",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(transaction)37_storage": {
        "encoding": "inplace",
        "label": "struct powerx.transaction",
        "members": [
          {
            "astId": 26,
            "contract": "contracts/powerX.sol:powerx",
            "label": "service_charge",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 28,
            "contract": "contracts/powerX.sol:powerx",
            "label": "energy_cost",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 30,
            "contract": "contracts/powerX.sol:powerx",
            "label": "total_cost",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 32,
            "contract": "contracts/powerX.sol:powerx",
            "label": "quantity",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 34,
            "contract": "contracts/powerX.sol:powerx",
            "label": "auctioned_bid",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 36,
            "contract": "contracts/powerX.sol:powerx",
            "label": "buyer",
            "offset": 0,
            "slot": "5",
            "type": "t_address_payable"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}